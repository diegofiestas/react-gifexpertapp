{"version":3,"sources":["componentes/AddCategory.jsx","helpers/GetGifs.jsx","componentes/GifGridItem.jsx","componentes/GifGrid.jsx","hooks/useFetchGifs.jsx","GifExpertApp.jsx","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","key","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","console","log","useFetchGifs","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"yKAGe,SAASA,EAAT,GAAsC,IAAhBC,EAAe,EAAfA,cAAe,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAiBhD,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAG,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,OAMlB,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAlBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,W,2BCRlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACTC,EADS,iDACwCC,UAAUH,GADlD,+DAEII,MAAMF,GAFV,cAETG,EAFS,gBAGMA,EAAKC,OAHX,uBAGRC,EAHQ,EAGRA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAT1B,kBAaRM,GAbQ,4CAAH,sDCEPO,EAAc,SAAC,GAAW,IAAVL,EAAS,EAATA,IACzB,OACI,yBAAKM,UAAU,yDAAyDC,IAAKP,EAAIC,IACjF,yBAAKO,IAAKR,EAAIR,IAAKU,MAAOF,EAAIE,MAAOO,IAAKT,EAAIE,QAC9C,2BAAIF,EAAIE,SCFHQ,EAAU,SAAC,GAAiB,IAAhBpB,EAAe,EAAfA,UAAe,ECAZ,SAACA,GAAe,IAAD,EAEbd,mBAAS,CAC/BqB,KAAM,GACNc,SAAS,IAJ0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAqBvC,OAdAC,qBAAU,WACNzB,EAAQC,GACHyB,MAAM,SAAAC,GAEHC,QAAQC,IAAIF,GAERH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAI1B,CAACrB,IAEGsB,EDnB0BO,CAAc7B,GAAlCa,EAFuB,EAE5BN,KAAac,EAFe,EAEfA,QAErB,OACI,oCACA,4BAAKrB,GAEJqB,GAAW,uBAAGL,UAAU,oDAAb,cAEZ,yBAAKA,UAAU,aAAf,OACKH,QADL,IACKA,OADL,EACKA,EAAQJ,KAAK,SAACC,GAAD,OACV,kBAAC,EAAD,CAAaA,IAAKA,EAAKO,IAAKP,EAAIC,WEXjC,SAASmB,IAAe,IAAD,EAEE5C,mBAAS,CAAC,cAFZ,mBAE3B6C,EAF2B,KAEf9C,EAFe,KAIlC,OACI,oCACA,4CACA,6BACA,kBAACD,EAAD,CAAaC,cAAeA,IAC5B,6BACA,4BACC8C,EAAWtB,KAAK,SAAAT,GAAS,OACtB,kBAAC,EAAD,CACIiB,IAAKjB,EACLA,UAAWA,S,MCd3BgC,IAASC,OACL,kBAACH,EAAD,MACFI,SAASC,eAAe,U","file":"static/js/main.470f1ae5.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\n\r\nexport default function AddCategory({setCategorias}){\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategorias( cat => [ inputValue, ...cat, ]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n        <input \r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}            \r\n        />\r\n        </form>\r\n    )\r\n}","export const getGifs = async(categoria) => {\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(categoria)}&limit=10&api_key=LZTDIe7PQLwyzMi2Zn1UioiHcCrAHxQE`;\r\n        const resp = await fetch(url);\r\n        const {data} = await resp.json();\r\n        \r\n        const gifs = data.map( img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images.downsized_medium.url\r\n            }\r\n        })\r\n\r\n        return gifs;\r\n    }","import React from 'react';\r\n\r\nexport const GifGridItem = ({img}) => {\r\n    return(\r\n        <div className=\"card animate__animated animate__bounce animate__fadeIn\" key={img.id}>        \r\n        <img src={img.url} title={img.title} alt={img.title}/>\r\n        <p>{img.title}</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({categoria}) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( categoria );\r\n\r\n    return(\r\n        <>\r\n        <h3>{categoria}</h3>\r\n\r\n        {loading && <p className=\"animate__animated animate__bounce animate__flash\">...Loading</p>}\r\n\r\n        <div className=\"card-grid\">\r\n            {images?.map( (img)=> (\r\n                <GifGridItem img={img} key={img.id} />\r\n            ))}        \r\n        </div>\r\n        </>\r\n    )\r\n}","import { useEffect } from \"react\"\r\nimport { useState } from \"react\"\r\nimport { getGifs } from \"../helpers/GetGifs\";\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(categoria)\r\n            .then( imgs => {\r\n\r\n                console.log(imgs);\r\n\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n\r\n            })\r\n    }, [categoria])\r\n\r\n    return state;\r\n\r\n}\r\n\r\n","import React from 'react';\r\nimport { useState } from 'react';\r\nimport AddCategory from './componentes/AddCategory';\r\nimport { GifGrid } from './componentes/GifGrid';\r\n\r\nexport default function GifExpertApp(){\r\n\r\n    const [categorias, setCategorias] = useState(['Samurai X']);\r\n\r\n    return(\r\n        <>\r\n        <h2>GifExpertApp</h2>\r\n        <hr />\r\n        <AddCategory setCategorias={setCategorias} />\r\n        <hr />\r\n        <ol>\r\n        {categorias.map( categoria => (\r\n            <GifGrid \r\n                key={categoria}\r\n                categoria={categoria} \r\n            />\r\n        ))}\r\n        </ol>\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}